apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: cluster-resources
  # In a real-world scenario these might to into a separate namespace
  namespace: ${config.application.namePrefix}argocd
  annotations:
<#if config.features.mail.active?? && config.features.mail.active>
    notifications.argoproj.io/subscribe.email: ${config.features.argocd.emailToAdmin}
</#if>
spec:
  description: Contains basic cluster-resources
  destinations:
    - namespace: '*'
      server: https://kubernetes.default.svc
  sourceRepos:
  - ${scmm.repoUrl}argocd/cluster-resources.git
<#if config.application.mirrorRepos>
  - ${scmm.baseUrl}<#if config.scm.scmProviderType == "gitlab">/3rd-party-dependencies/kube-prometheus-stack.git<#else>/repo/3rd-party-dependencies/kube-prometheus-stack</#if>
  - ${scmm.baseUrl}<#if config.scm.scmProviderType == "gitlab">/3rd-party-dependencies/mailhog.git<#else>/repo/3rd-party-dependencies/mailhog</#if>
  - ${scmm.baseUrl}<#if config.scm.scmProviderType == "gitlab">/3rd-party-dependencies/ingress-nginx.git<#else>/repo/3rd-party-dependencies/ingress-nginx</#if>
  - ${scmm.baseUrl}<#if config.scm.scmProviderType == "gitlab">/3rd-party-dependencies/external-secrets.git<#else>/repo/3rd-party-dependencies/external-secrets</#if>
  - ${scmm.baseUrl}<#if config.scm.scmProviderType == "gitlab">/3rd-party-dependencies/vault.git<#else>/repo/3rd-party-dependencies/vault</#if>
  - ${scmm.baseUrl}<#if config.scm.scmProviderType == "gitlab">/3rd-party-dependencies/cert-manager.git<#else>/repo/3rd-party-dependencies/cert-manager</#if>
<#else>
  - https://prometheus-community.github.io/helm-charts
  - https://codecentric.github.io/helm-charts
  - https://kubernetes.github.io/ingress-nginx
  - https://helm.releases.hashicorp.com
  - https://charts.external-secrets.io
  - https://charts.jetstack.io
</#if>

  # allow to only see application resources from the specified namespace
  sourceNamespaces:
    - '${config.application.namePrefix}argocd'

  # Allow all namespaced-scoped resources to be created
  namespaceResourceWhitelist:
    - group: '*'
      kind: '*'
  # Allow all cluster-scoped resources to be created
  clusterResourceWhitelist:
    - group: '*'
      kind: '*'