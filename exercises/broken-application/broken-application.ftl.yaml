apiVersion: apps/v1
kind: Deploymentz
metadata:
  name: broken-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broken-application
<#if config.registry.createImagePullSecrets == true>
  imagePullSecrets:
    - name: proxy-registry
</#if>
  template:
    metadata:
      labels:
        app: broken-application
    spec:
      containers:
        - name: broken-application
          image: <#if nginxImage??>${nginxImage}<#else>bitnami/nginx:1.25.1</#if>
          ports:
            - containerPort: 8080
<#if config.application.podResources == true>
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 30m
              memory: 15Mi
</#if>

---

apiVersion: v1
kind: Service
metadata:
  name: broken-application
  labels:
    app: broken-application
spec:
  type: <#if config.application.remote>LoadBalancer<#else>ClusterIP</#if>
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: broken-application

<#if config.features.exampleApps.nginx.baseDomain?has_content>
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: broken-application
  labels:
    app: broken-application
spec:
  rules:
    <#if config.application.urlSeparatorHyphen>
    - host: broken-application-${config.features.exampleApps.nginx.baseDomain}
    <#else>
    - host: broken-application.${config.features.exampleApps.nginx.baseDomain}
    </#if>
      http:
        paths:
          - backend:
              service:
                name: broken-application
                port:
                  name: http
            path: /
            pathType: Prefix

</#if>
