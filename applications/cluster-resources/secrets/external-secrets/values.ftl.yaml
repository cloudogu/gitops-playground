<#assign DockerImageParser=statics['com.cloudogu.gitops.utils.DockerImageParser']>
<#if config.application.skipCrds == true>
installCRDs: false
</#if>
<#if config.application.podResources == true>
certController:
  resources:
    limits:
      memory: 110Mi
      cpu: 500m
    requests:
      memory: 55Mi
      cpu: 50m

webhook:
  resources:
    limits:
      memory: 50Mi
      cpu: 500m
    requests:
      memory: 25Mi
      cpu: 50m
      
resources:
  limits:
    memory: 80Mi
    cpu: 500m
  requests:
    memory: 40Mi
    cpu: 50m
</#if>
<#if config.registry.createImagePullSecrets?has_content && config.registry.twoRegistries?has_content>
imagePullSecrets:
  - name: proxy-registry
</#if>
<#if config.features.secrets.externalSecrets.helm.image?has_content>
<#assign imageObject = DockerImageParser.parse(config.features.secrets.externalSecrets.helm.image)>
image:
  repository: ${imageObject.registryAndRepositoryAsString}
  tag: ${imageObject.tag}
</#if>
<#if config.features.secrets.externalSecrets.helm.certControllerImage?has_content>
<#assign certControllerimageObject = DockerImageParser.parse(config.features.secrets.externalSecrets.helm.certControllerImage)>
certController:
  image:
    repository: ${certControllerimageObject.registryAndRepositoryAsString}
    tag: ${certControllerimageObject.tag}
  <#if config.registry.createImagePullSecrets?has_content && config.registry.twoRegistries?has_content>
  imagePullSecrets:
    - name: proxy-registry
  </#if>
</#if>
<#if config.features.secrets.externalSecrets.helm.webhookImage?has_content>
<#assign webhookImageObject = DockerImageParser.parse(config.features.secrets.externalSecrets.helm.webhookImage)>
webhook:
  image:
    repository: ${webhookImageObject.registryAndRepositoryAsString}
    tag: ${webhookImageObject.tag}
  <#if config.registry.createImagePullSecrets?has_content && config.registry.twoRegistries?has_content>
  imagePullSecrets:
    - name: proxy-registry
  </#if>
</#if>