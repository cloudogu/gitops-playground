apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-prometheus-stack-prometheus
  namespace: ${namespace}
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
<#-- These options taken from the cluster role are not valid inside the role:
      Role.rbac.authorization.k8s.io "kube-prometheus-stack-prometheus" is invalid: rules[2].nonResourceURLs: Invalid value: []string{"/metrics", "/metrics/cadvisor"}: namespaced rules cannot apply to non-resource URLs
  - nonResourceURLs:
      - /metrics
      - /metrics/cadvisor
    verbs:
      - get
-->
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-prometheus-stack-operator
  namespace: ${namespace}
rules:
  - verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    apiGroups:
      - monitoring.coreos.com
    resources:
      - alertmanagers
      - alertmanagers/finalizers
      - alertmanagerconfigs
      - prometheuses
      - prometheuses/status
      - prometheuses/finalizers
      - thanosrulers
      - thanosrulers/status
      - thanosrulers/finalizers
      - servicemonitors
      - podmonitors
      - probes
      - prometheusrules
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - ''
    resources:
      - namespaces
  - verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    apiGroups:
      - apps
    resources:
      - statefulsets
  - verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    apiGroups:
      - ''
    resources:
      - configmaps
      - secrets
  - verbs:
      - watch
      - get
      - list
      - delete
    apiGroups:
      - ''
    resources:
      - pods
  - verbs:
      - list
      - watch
      - get
      - create
      - update
      - delete
    apiGroups:
      - ''
    resources:
      - services
      - endpoints
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-prometheus-stack-operator
  namespace: ${namespace}
subjects:
  - kind: ServiceAccount
    name: kube-prometheus-stack-operator
    namespace: ${namePrefix}monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-prometheus-stack-operator
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-prometheus-stack-prometheus
  namespace: ${namespace}
subjects:
  - kind: ServiceAccount
    name: kube-prometheus-stack-prometheus
    namespace: ${namePrefix}monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-prometheus-stack-prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-prometheus-stack-grafana
  namespace: ${namespace}
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-prometheus-stack-grafana
  namespace: ${namespace}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-prometheus-stack-grafana
subjects:
  - kind: ServiceAccount
    name: kube-prometheus-stack-grafana
    namespace: ${namePrefix}monitoring
