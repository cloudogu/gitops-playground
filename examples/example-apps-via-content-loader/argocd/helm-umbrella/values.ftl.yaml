<#assign DockerImageParser=statics['com.cloudogu.gitops.utils.DockerImageParser']>
nginx:
<#if config.content.variables.images.nginx?has_content>
<#assign nginxImageObject = DockerImageParser.parse(config.content.variables.images.nginx)>
  image:
    registry: ${nginxImageObject.registry}
    repository: ${nginxImageObject.repository}
    tag: ${nginxImageObject.tag}
<#else>
  image:
    repository: bitnamilegacy/nginx
</#if>

  <#if config.registry.createImagePullSecrets == true>

  global:
    imagePullSecrets:
    - proxy-registry
  </#if>
  service:
    ports:
      http: 80
    type: <#if config.application.remote>LoadBalancer<#else>ClusterIP</#if>
<#if config.application.podResources == true>
  resources:
    limits:
      cpu: 100m
      memory: 30Mi
    requests:
      cpu: 30m
      memory: 15Mi
</#if>

<#if config.content.variables.nginx.baseDomain?has_content>
  ingress:
    enabled: true
    pathType: Prefix
    <#if config.application.urlSeparatorHyphen>
    hostname: production-nginx-helm-umbrella-${config.content.variables.nginx.baseDomain}
    <#else>
    hostname: production.nginx-helm-umbrella.${config.content.variables.nginx.baseDomain}
    </#if>
</#if>
